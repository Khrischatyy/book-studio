services:
  nginx:
    image: nginx:1.20
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - './:/app/'
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - php
    networks:
      - laravel
  php:
    build:
      context: ./docker/php/
      args:
        WWWUSER: 'laravel'
        WWWUID: '1000'
    volumes:
      - '.:/app/'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - laravel
    depends_on:
      - pgsql
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    networks:
      - laravel
    environment:
      ADMINER_DEFAULT_SERVER: 'pgsql'
      ADMINER_DEFAULT_TYPE: 'postgresql'
    depends_on:
      - pgsql
  node:
    image: node:16
    container_name: node
    volumes:
        - './:/app/'
    working_dir: '/app/'
  pgsql:
    image: postgres
    container_name: pgsql
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_DATABASE:-laravel}'
      POSTGRES_USER: '${DB_USERNAME:-laravel}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'pgsql:/var/lib/postgresql/data'
    networks:
      - laravel
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE:-laravel}", "-U", "${DB_USERNAME:-laravel}" ]
  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: mailhog
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - laravel
networks:
  laravel:
    driver: bridge
volumes:
  pgsql:
    driver: local
